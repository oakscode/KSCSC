package com.supplyco.jsonqr.controller;


import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.commons.CommonsMultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.DottedLineSeparator;
import com.supplyco.jsonqr.model.UploadFile;

@Controller
public class HomeController {

	@RequestMapping(value="/")
	public ModelAndView test(HttpServletResponse response){
		
		

		return new ModelAndView("home");
	}
	
	@RequestMapping(value="/",method = RequestMethod.POST)
	public ModelAndView post(HttpServletResponse response,@RequestParam("filejson") CommonsMultipartFile[] file,@RequestParam("fileinvoice") CommonsMultipartFile[] fileinvoice) throws IOException{
		
		
		if (file != null && file.length > 0) {
			for (CommonsMultipartFile aFile : file) {

				System.out.println("Saving file: " + aFile.getOriginalFilename());

				UploadFile uploadFile = new UploadFile();
				uploadFile.setFileName(aFile.getOriginalFilename());
				uploadFile.setData(aFile.getBytes());			
	
				
				BufferedReader br;
				List<String> result = new ArrayList<String>();
				try {

				     String line;
				     InputStream is = aFile.getInputStream();
				     br = new BufferedReader(new InputStreamReader(is));
				     while ((line = br.readLine()) != null) {
				          result.add(line);
				     }

				  } catch (IOException e) {
				    System.err.println(e.getMessage());       
				  }
				
				for(String jsonstr : result) {
		
					
					      JsonParser parser = new JsonParser();  
					      JsonElement rootNode = parser.parse(jsonstr);  
					      
					      if (rootNode.isJsonObject()) {
					    	  JsonObject details = rootNode.getAsJsonObject();  
					          JsonElement nameNode = details.get("SignedInvoice"); 
					          System.out.println("SignedInvoice : " +nameNode.getAsString()); 
					      }
				}
			}
		}
		
		//invoice upload
		
		if (fileinvoice != null && fileinvoice.length > 0) {
			for (CommonsMultipartFile aFile : fileinvoice) {

				System.out.println("Saving file: " + aFile.getOriginalFilename());

				UploadFile uploadFile = new UploadFile();
				uploadFile.setFileName(aFile.getOriginalFilename());
				uploadFile.setData(aFile.getBytes());		
				
				BufferedReader br;
				List<String> result = new ArrayList<String>();
				try {

				     String line;
				     InputStream is = aFile.getInputStream();
				     br = new BufferedReader(new InputStreamReader(is));
				     while ((line = br.readLine()) != null) {
				          result.add(line);
				     }

				  } catch (IOException e) {
				    System.err.println(e.getMessage());       
				  }
			
				List<String> li = new ArrayList<String>();
				
				for(String str : result) {
					
				     System.out.println(Decode(0,str));
				     
				     li.add(Decode(0,str)+"\n");
			}
				//PDF(li);
				pdfprint(li);
			}
		}
		
		return new ModelAndView("home");
	}
	
	public String Decode(int a, String msg){
		
		String Decriptedmsg = "";
		
	    if(a == 0){
	        StringBuffer sb = new StringBuffer(msg);
	        for(int i = 0; i < sb.length(); i++){
	            int temp = 0;
	            temp = (int)sb.charAt(i);
	            temp = temp - 8;
	            sb.setCharAt(i, (char)temp);
	            Decriptedmsg = sb.toString();
	        }
	        //jTextArea2.setText(EncryptedMsg);
	   }
	    else if(a == 1){
	        //jTextArea1.setText("");
	        //jTextArea2.setText("");

	    }
	    return Decriptedmsg;
	}
	
	
	public void pdfprint(List<String> body) {
		Document document = new Document();
		document.setPageSize(PageSize.A4.rotate());
		
	     
		try
		{
		    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("D:\\java_pdf\\AddImageExample.pdf"));
		    document.open();
		 
		    //Add Image
		    Image image1 = Image.getInstance("file:\\E:\\QRCode.png");
		    //Fixed Positioning
		    image1.setAbsolutePosition(50f, 450f);
		    //Scale to new height and new width of image
		    image1.scaleAbsolute(80, 80);
		    //Add to document
		    document.add(image1);
		    
		    float[] columnWidths = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
	        PdfPTable table = new PdfPTable(columnWidths);
	//	    PdfPTable table = new PdfPTable(11); // 3 columns.

            
		    
		    String para1 = "Tutorials Point originated from the idea that there exists a class of readers who respond better to online content and prefer to learn new skills at their own pace from the comforts of their drawing rooms";  
		    Paragraph p,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,    p17,p18,p19;
		    
		    
		    p1 = new Paragraph();
            p1.add(new Chunk(body.get(0),FontFactory.getFont(FontFactory.HELVETICA,14,Font.BOLD)));
            
            p2 = new Paragraph();
            p2.add(body.get(1));
            
            p3 = new Paragraph();
            p3.add(body.get(2));
            
            p4 = new Paragraph();
            p4.add(body.get(3));
            
            p5 = new Paragraph();
            p5.add(body.get(4));
            
            p6 = new Paragraph();
            p6.add(body.get(5));
            
            Chunk linebreak = new Chunk(new DottedLineSeparator());
            
            p7 = new Paragraph();
            
            int i =0;
            for(Object li : body) {
            	
            	
            	if(i>6 && i < 16) {
            		p7.add(li.toString());
            	}
            	i++;
            }
            
            p1.setAlignment(Element.ALIGN_CENTER);
            p2.setAlignment(Element.ALIGN_CENTER);
            p3.setAlignment(Element.ALIGN_CENTER);
            p4.setAlignment(Element.ALIGN_CENTER);
            p5.setAlignment(Element.ALIGN_CENTER);
            p6.setAlignment(Element.ALIGN_CENTER);
            

            PdfPCell cell1 = new PdfPCell(new Paragraph("Slno"));
            PdfPCell cell2 = new PdfPCell(new Paragraph("ItemCode"));
            PdfPCell cell3 = new PdfPCell(new Paragraph("Commodity"));
            PdfPCell cell4 = new PdfPCell(new Paragraph("Unit"));
            PdfPCell cell5 = new PdfPCell(new Paragraph("Qty"));
            PdfPCell cell6 = new PdfPCell(new Paragraph("Bags"));
            PdfPCell cell7 = new PdfPCell(new Paragraph("S.Rate"));
            PdfPCell cell8 = new PdfPCell(new Paragraph("Disc%"));
            PdfPCell cell9 = new PdfPCell(new Paragraph("Tax%"));
            PdfPCell cell10 = new PdfPCell(new Paragraph("RateW/Tax"));
            PdfPCell cell11 = new PdfPCell(new Paragraph("MRP"));
            

            table.addCell(cell1);
            table.addCell(cell2);
            table.addCell(cell3);
            table.addCell(cell4);
            table.addCell(cell5);
            table.addCell(cell6);
            table.addCell(cell7);
            table.addCell(cell8);
            table.addCell(cell9);
            table.addCell(cell10);
            table.addCell(cell11);
            
           // table.setWidthPercentage(100);
            
            
            

            document.add(p1);
            document.add(p2);
            document.add(p3);
            document.add(p4);
            document.add(p5);
            document.add(p6);
            document.add(linebreak); 
            document.add(p7);
            document.add(table);

            
            
//		 
//		    String imageUrl = "file:\\E:\\QRCode.png";
//		    Image image2 = Image.getInstance(new URL(imageUrl));
//		    document.add(image2);
		 
		    
		
		    document.close();
		    writer.close();
		} catch (Exception e)
		{
		    e.printStackTrace();
		}
	}
}
