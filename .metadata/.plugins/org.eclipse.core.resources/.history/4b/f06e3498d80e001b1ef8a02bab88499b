package com.supplyco.jsonqr.dao_impl;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;


import com.supplyco.jsonqr.dao.MasterDAO;
import com.supplyco.jsonqr.model.BchDtls;
import com.supplyco.jsonqr.model.BuyerDtls;
import com.supplyco.jsonqr.model.Dippo;
import com.supplyco.jsonqr.model.DispDtls;
import com.supplyco.jsonqr.model.DocDtls;
import com.supplyco.jsonqr.model.EwbDtls;
import com.supplyco.jsonqr.model.ItemList;
import com.supplyco.jsonqr.model.Login;
import com.supplyco.jsonqr.model.MasterEinvoice;
import com.supplyco.jsonqr.model.SellerDtls;
import com.supplyco.jsonqr.model.Soutdetail;
import com.supplyco.jsonqr.model.Southead;
import com.supplyco.jsonqr.model.TranDtls;
import com.supplyco.jsonqr.model.ValDtls;

public class MasterDAO_impl implements MasterDAO {
	
	private JdbcTemplate jdbcTemplate;
	
	public MasterDAO_impl(DataSource dataSource) {
		jdbcTemplate = new JdbcTemplate(dataSource);
		
	}
	

	@Override
	public List<Dippo> dippolist() {

		String sql = "SELECT x.* FROM hodms.dippo x\r\n" + 
				"WHERE D_TYPE ='d'";

		List<Dippo> li = jdbcTemplate.query(sql, new RowMapper<Dippo>() {
			public Dippo mapRow(ResultSet rs, int row) throws SQLException {

				Dippo dippo = new Dippo();
				dippo.setDipponame(rs.getString("Dipponame"));
				dippo.setDippocode(rs.getString("Dippocode"));
				return dippo;
			}
		});

		return li;
	}


	@Override
	public List<Southead> isulist(final String dippocode) {
		
		String sql = "select a.*,max(a.TrDate) from southead a join sindetailgst b on a.IsuNo = b.isuno and a.ThisOLCode ='"+dippocode+"' and a.IsuDate >= '2020-03-01' and a.IsuMode ='2' and b.BStatus ='1' \r\n" + 
				     " and a.active =1 and a.stage=1 GROUP by a.IsuNo ORDER BY a.IsuNo ASC";
		
		System.out.println("issue list->"+sql);
		
		List<Southead> li =jdbcTemplate.query(sql, new RowMapper<Southead>() {

			@Override
			public Southead mapRow(ResultSet rs, int rowNum) throws SQLException {
				Southead sout = new Southead();
				sout.setIsuno(rs.getString("isuno"));
				sout.setIsudate(rs.getString("isudate"));
				sout.setIsumode(rs.getString("isumode"));
				sout.setSaleMode(rs.getString("salemode"));
				sout.setTrnsCode(rs.getString("Transcode"));
				sout.setNetAmt(rs.getString("netAmt"));
				sout.setViewurl("<a href=\"viewissue?isuno="+sout.getIsuno()+"&olcode="+dippocode+"\">view</a>");
				
				
				return sout;
			}
			});

		return li;
	}


	@Override
	public Southead isuhead(String isuno,String dippocode) {

		String sql = "select a.*,c.dipponame ,max(a.TrDate) from southead a join sindetailgst b on a.IsuNo = b.isuno join dippo c on a.ThisOLCode =c.Dippocode where "
				   +"a.ThisOLCode ='"+dippocode+"' and a.IsuDate >= '2020-03-01' and a.IsuMode ='2' and b.BStatus ='1' and a.active =1 and a.stage=1 \r\n" + 
					"and a.IsuNo = '"+isuno+"' GROUP by a.IsuNo ORDER BY a.IsuNo ASC" ;

		Southead south = jdbcTemplate.queryForObject(sql, new RowMapper<Southead>() {
			public Southead mapRow(ResultSet rs, int row) throws SQLException {

				Southead s = new Southead();
				
				s.setThisolcode(rs.getString("thisolcode"));
				s.setDipponame(rs.getString("dipponame"));
				s.setIsuno(rs.getString("isuno"));
				s.setIsudate(rs.getString("isudate"));
				s.setProdAmt(rs.getString("prodamt"));
				s.setTaxAmt(rs.getString("taxamt"));
				s.setDiscAmt(rs.getString("discamt"));
				s.setTotalAmt(rs.getString("totalamt"));
				s.setRoundoffamt(rs.getString("roundoffamt"));
				s.setNetAmt(rs.getString("netamt"));
				
				
				

				return s;
			}
		});
		return south;

	}


	@Override
	public List<Soutdetail> isudetail(String isuno, String dippocode) {
		String sql = "select a.*,b.cmname,max(a.TrDate),a.srate*a.isudqty as totalamt from soutdetail a join cm b on a.CMCode =b.CMCode join southead c "
				+ "on a.IsuNo =c.IsuNo where c.Active =1 and c.Stage = 1 and a.IsuNo='"+isuno+"' and a.ThisOLCode ='"+dippocode+"' GROUP by a.Slno order by a.slno";
		
		System.out.println("qry-->"+sql);
		
		List<Soutdetail> li =jdbcTemplate.query(sql, new RowMapper<Soutdetail>() {

			@Override
			public Soutdetail mapRow(ResultSet rs, int rowNum) throws SQLException {
				Soutdetail soutd = new Soutdetail();
				
				soutd.setIsuno(rs.getString("isuno"));
				soutd.setCmcode(rs.getString("cmcode"));
				soutd.setCmname(rs.getString("cmname"));
				soutd.setDiscperc(rs.getString("discperc"));
				soutd.setIsudqty(rs.getString("isudqty"));
				soutd.setSlno(rs.getString("slno"));
				soutd.setSrate(rs.getString("srate"));
				soutd.setTaxperc(rs.getString("taxperc"));
				soutd.setTotalamt(rs.getString("totalamt"));
				
				return soutd;
			}
			});
		
		
		return li;
	}


	@Override
	public MasterDAO initJson(String isuno, String olcode) {
		
		
		MasterEinvoice master = new MasterEinvoice();
		
		
		TranDtls tranDtls = new TranDtls();
		tranDtls.setTaxSch("GST");
		tranDtls.setSupTyp("B2B");
		tranDtls.setIgstOnIntra("N");
		tranDtls.setEcmGstin(null);
		
		DocDtls docDtls = new DocDtls();
		
		docDtls.setTyp("INV");
		docDtls.setNo("2010245");
		docDtls.setDt("12/10/2020");
		
		
		SellerDtls sellerDtls = new SellerDtls();
		sellerDtls.setGstin("32AAACK6767FHZ5");
		sellerDtls.setLglNm("KERALA STATE CIVIL SUPPLIES CORPORATION LTD");
		sellerDtls.setTrdNm("KERALA STATE CIVIL SUPPLIES CORPORATION LTD");
		sellerDtls.setAddr1("ADDONE1");
		sellerDtls.setAddr2("ADDONE2");
		sellerDtls.setLoc("ERNAMKULAM");
		sellerDtls.setPin(682020);
		sellerDtls.setStcd("32");
		sellerDtls.setPh("9999999999");
		sellerDtls.setEm("supplyco@gmail.com");

		BuyerDtls buyerDtls = new BuyerDtls();
		buyerDtls.setGstin("32AHHY8465855HA");
		buyerDtls.setLglNm("SREELATHA SATHISHA");
		buyerDtls.setTrdNm("MANASA ECO BAGS");
		buyerDtls.setPos("32");
		buyerDtls.setAddr1("ADDRESS 1");
		buyerDtls.setAddr2("ADDRESS 2");
		buyerDtls.setLoc("KASARKODE");
		buyerDtls.setPin(658958);
		buyerDtls.setStcd("32");
		buyerDtls.setPh("999999999");
		buyerDtls.setEm("abc@gmail.com");
		
		DispDtls dispDtls = new DispDtls();
		dispDtls.setNm("Dispatchname");
		dispDtls.setAddr1("ADDRESS1");
		dispDtls.setAddr2("ADDRESS2");
		dispDtls.setLoc("Dispatch LOCATION");
		dispDtls.setPin(5486258);
		dispDtls.setStcd("32");
		
		ValDtls valDtls = new ValDtls();
		valDtls.setAssVal(4900);
		valDtls.setIgstVal(0);
		valDtls.setCgstVal(227.5);
		valDtls.setSgstVal(227.5);
		valDtls.setCesVal(9.8);
		valDtls.setDiscount(369);
		valDtls.setOthChrg(0);
		valDtls.setRndOffAmt(0);
		valDtls.setTotInvVal(5000.7);
		
		EwbDtls ewbDtls = new EwbDtls();
		ewbDtls.setTransId("32AAACK6767FHZ5");
		ewbDtls.setTransName("transOne");
		ewbDtls.setTransMode("1");
		ewbDtls.setDistance(25);
		ewbDtls.setTransDocNo("20107");
		ewbDtls.setTransDocDt("12/10/2020");
		ewbDtls.setVehNo("KL 52 J 3263");
		ewbDtls.setVehType("R");
		
		List<ItemList> itemlist = new ArrayList<ItemList>(); 
		ItemList itemList = new ItemList();
		itemList.setSlNo("1");
		itemList.setPrdDesc("COMMODITY NAME");
		itemList.setIsServc("N");
		itemList.setHsnCd("11025455");
		itemList.setBarcde(null);
		itemList.setQty(10);
		itemList.setFreeQty(0);
		itemList.setUnit("BAG");
		itemList.setUnitPrice(300); //set int to double 300.00
		itemList.setTotAmt(3000);
		itemList.setDiscount(0);
		itemList.setPreTaxVal(0);
		itemList.setAssAmt(3000);
		itemList.setGstRt(12);
		itemList.setIgstAmt(0);
		itemList.setCgstAmt(180);
		itemList.setSgstAmt(180);
		itemList.setCesRt(0.2);
		itemList.setCesAmt(6);
		itemList.setCesNonAdvlAmt(0);
		itemList.setStateCesRt(0.1);
		itemList.setStateCesAmt(3);
		itemList.setStateCesNonAdvlAmt(0);
		itemList.setOthChrg(0);
		itemList.setTotItemVal(3369);
		
		BchDtls bchDtls = new BchDtls();
		bchDtls.setNm("bb22yy");
		bchDtls.setExpDt("30/11/2026");
		bchDtls.setWrDt("90/11/2026");
		itemList.setBchDtls(bchDtls);
		
		itemlist.add(itemList);
		
		
		master.setVersion("1.1");
		master.setTranDtls(tranDtls);
		master.setDocDtls(docDtls);
		master.setSellerDtls(sellerDtls);
		master.setBuyerDtls(buyerDtls);
		master.setDispDtls(dispDtls);
		master.setShipDtls(null);
		master.setValDtls(valDtls);
		master.setEwbDtls(ewbDtls);
		master.setItemList(itemlist);
		
		
		
		return master;
		

	}







}
