package com.supplyco.jsonqr.controller;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.json.JSONArray;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.supplyco.jsonqr.dao.MasterDAO;
import com.supplyco.jsonqr.model.BchDtls;
import com.supplyco.jsonqr.model.BuyerDtls;
import com.supplyco.jsonqr.model.Dippo;
import com.supplyco.jsonqr.model.DispDtls;
import com.supplyco.jsonqr.model.DocDtls;
import com.supplyco.jsonqr.model.EwbDtls;
import com.supplyco.jsonqr.model.ItemList;
import com.supplyco.jsonqr.model.MasterEinvoice;
import com.supplyco.jsonqr.model.SellerDtls;
import com.supplyco.jsonqr.model.Soutdetail;
import com.supplyco.jsonqr.model.Southead;
import com.supplyco.jsonqr.model.TranDtls;
import com.supplyco.jsonqr.model.ValDtls;

@Controller
public class MasterController {
	
	@Autowired
	MasterDAO dao;
	
	@RequestMapping(value = "/issuelist",produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public String test(HttpServletResponse response,@RequestParam("dcode") String dcode) {
		
		System.out.println("Deppocode  "+dcode);
		
		List<Southead> isu = dao.isulist(dcode);
		int no=1;
		JSONArray userArray = new JSONArray();
		for(Southead s: isu) {
			
			String n=Integer.toString(no);
			
			String[] value =
					{ /* n, */
		         s.getIsuno(),
		         s.getIsudate(),
		         s.getIsumode(),
		         s.getSaleMode(),
		         s.getNetAmt(),
		         s.getViewurl()
		        }; 
			
			userArray.put(value);
	        no++;
		}
		
		String x=userArray.toString();
		return "{\"data\":"+x+"}";
		
	}
	//geneinvice
	@RequestMapping(value = "/viewissue")
	public ModelAndView getlogin(HttpServletResponse response,@RequestParam("isuno") String isuno,@RequestParam("olcode") String olcode) {

		Southead south = dao.isuhead(isuno, olcode);
		ModelAndView mv = new ModelAndView("viewissue");
		
		List<Soutdetail> li = dao.isudetail(isuno, olcode);
		
		for(Soutdetail s : li) {
			System.out.println("slno :"+s.getSlno());
			System.out.println("cmcode :"+s.getCmcode());
			System.out.println("cmname :"+s.getCmname());
			System.out.println("isudqty :"+s.getIsudqty());
		}
		
		
		mv.addObject("south", south);
		mv.addObject("soutd", li);
		
		return mv;
	}
	@RequestMapping("/download")
	   public void downloadFile3(HttpServletResponse resonse,@RequestParam("isuno") String isuno,@RequestParam("olcode") String olcode) throws IOException {
	     
		System.out.println("olcode :"+olcode);
		System.out.println("isuno  :"+isuno);
		
		createjson(isuno,olcode);
		
		  //create json file for download
		  File file = new File("C:\\Users\\Administrator\\Downloads\\data.json");

	      resonse.setContentType("application/pdf");
	      resonse.setHeader("Content-Disposition", "attachment;filename=" + file.getName());
	      BufferedInputStream inStrem = new BufferedInputStream(new FileInputStream(file));
	      BufferedOutputStream outStream = new BufferedOutputStream(resonse.getOutputStream());
	      
	      byte[] buffer = new byte[1024];
	      int bytesRead = 0;
	      while ((bytesRead = inStrem.read(buffer)) != -1) {
	        outStream.write(buffer, 0, bytesRead);
	      }
	      outStream.flush();
	      inStrem.close();
	   }
	

	public void createjson(String isuno,String olcode) {
		
		final String path ="D://temp//"+isuno+"inv"+olcode;
		  
		//Create the file
		try {
			
			ObjectMapper mapper = new ObjectMapper();
	        MasterEinvoice master = new  MasterEinvoice();

	        try {
	            mapper.writeValue(new File(path+".json"), master);
	            String jsonString = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(master);
	            System.out.println(jsonString);
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
			
			
//			String data = "Test data";
//			 
//			FileOutputStream out = new FileOutputStream(path);
//			 
//			out.write(data.getBytes());
//			out.close();
			
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}


	}
	
	private static MasterEinvoice newjson() {
		
		MasterEinvoice master = new MasterEinvoice();
		
		
		TranDtls tranDtls = new TranDtls();
		tranDtls.setTaxSch("GST");
		tranDtls.setSupTyp("B2B");
		tranDtls.setIgstOnIntra("N");
		tranDtls.setEcmGstin(null);
		
		DocDtls docDtls = new DocDtls();
		
		docDtls.setTyp("INV");
		docDtls.setNo("2010245");
		docDtls.setDt("12/10/2020");
		
		
		SellerDtls sellerDtls = new SellerDtls();
		sellerDtls.setGstin("32AAACK6767FHZ5");
		sellerDtls.setLglNm("KERALA STATE CIVIL SUPPLIES CORPORATION LTD");
		sellerDtls.setTrdNm("KERALA STATE CIVIL SUPPLIES CORPORATION LTD");
		sellerDtls.setAddr1("ADDONE1");
		sellerDtls.setAddr2("ADDONE2");
		sellerDtls.setLoc("ERNAMKULAM");
		sellerDtls.setPin(682020);
		sellerDtls.setStcd("32");
		sellerDtls.setPh("9999999999");
		sellerDtls.setEm("supplyco@gmail.com");

		BuyerDtls buyerDtls = new BuyerDtls();
		buyerDtls.setGstin("32AHHY8465855HA");
		buyerDtls.setLglNm("SREELATHA SATHISHA");
		buyerDtls.setTrdNm("MANASA ECO BAGS");
		buyerDtls.setPos("32");
		buyerDtls.setAddr1("ADDRESS 1");
		buyerDtls.setAddr2("ADDRESS 2");
		buyerDtls.setLoc("KASARKODE");
		buyerDtls.setPin(658958);
		buyerDtls.setStcd("32");
		buyerDtls.setPh("999999999");
		buyerDtls.setEm("abc@gmail.com");
		
		DispDtls dispDtls = new DispDtls();
		dispDtls.setNm("Dispatchname");
		dispDtls.setAddr1("ADDRESS1");
		dispDtls.setAddr2("ADDRESS2");
		dispDtls.setLoc("Dispatch LOCATION");
		dispDtls.setPin(5486258);
		dispDtls.setStcd("32");
		
		ValDtls valDtls = new ValDtls();
		valDtls.setAssVal(4900);
		valDtls.setIgstVal(0);
		valDtls.setCgstVal(227.5);
		valDtls.setSgstVal(227.5);
		valDtls.setCesVal(9.8);
		valDtls.setDiscount(369);
		valDtls.setOthChrg(0);
		valDtls.setRndOffAmt(0);
		valDtls.setTotInvVal(5000.7);
		
		EwbDtls ewbDtls = new EwbDtls();
		ewbDtls.setTransId("32AAACK6767FHZ5");
		ewbDtls.setTransName("transOne");
		ewbDtls.setTransMode("1");
		ewbDtls.setDistance(25);
		ewbDtls.setTransDocNo("20107");
		ewbDtls.setTransDocDt("12/10/2020");
		ewbDtls.setVehNo("KL 52 J 3263");
		ewbDtls.setVehType("R");
		
		List<ItemList> itemlist = new ArrayList<ItemList>(); 
		ItemList itemList = new ItemList();
		itemList.setSlNo("1");
		itemList.setPrdDesc("COMMODITY NAME");
		itemList.setIsServc("N");
		itemList.setHsnCd("11025455");
		itemList.setBarcde(null);
		itemList.setQty(10);
		itemList.setFreeQty(0);
		itemList.setUnit("BAG");
		itemList.setUnitPrice(300); //set int to double 300.00
		itemList.setTotAmt(3000);
		itemList.setDiscount(0);
		itemList.setPreTaxVal(0);
		itemList.setAssAmt(3000);
		itemList.setGstRt(12);
		itemList.setIgstAmt(0);
		itemList.setCgstAmt(180);
		itemList.setSgstAmt(180);
		itemList.setCesRt(0.2);
		itemList.setCesAmt(6);
		itemList.setCesNonAdvlAmt(0);
		itemList.setStateCesRt(0.1);
		itemList.setStateCesAmt(3);
		itemList.setStateCesNonAdvlAmt(0);
		itemList.setOthChrg(0);
		itemList.setTotItemVal(3369);
		
		BchDtls bchDtls = new BchDtls();
		bchDtls.setNm("bb22yy");
		bchDtls.setExpDt("30/11/2026");
		bchDtls.setWrDt("90/11/2026");
		itemList.setBchDtls(bchDtls);
		
		itemlist.add(itemList);
		
		
		master.setVersion("1.1");
		master.setTranDtls(tranDtls);
		master.setDocDtls(docDtls);
		master.setSellerDtls(sellerDtls);
		master.setBuyerDtls(buyerDtls);
		master.setDispDtls(dispDtls);
		master.setShipDtls(null);
		master.setValDtls(valDtls);
		master.setEwbDtls(ewbDtls);
		master.setItemList(itemlist);
		
		
		
		return master;
		
	}

}
